user SignUp API

First, the code imports necessary modules from the project directory: User model from userSchema.js, bcrypt for password hashing, jwt for authentication, and transpoter for email service.

Then, the API function for user signup is defined, taking the request and response objects as parameters.

The API function extracts the userEmail and userPassword from the request body.

It then creates a new user object with the extracted data and saves it to the database.

The code checks if the user already exists in the database by finding a user with the same email as the extracted userEmail.

If the user already exists, the API returns a 409 status code indicating a conflict, with a message that the email already exists.

If the user does not already exist, the code generates a salt and uses it to hash the user's password.

The code sets the user's profile picture to a file uploaded via the request object.

Finally, the code saves the user to the database and returns a 201 status code indicating that the user has been successfully registered.

If an error occurs during any of the above steps, the code returns a 500 status code with an error message.